<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo搭建博客——结束篇]]></title>
    <url>%2FHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E2%80%94%E2%80%94%E7%BB%93%E6%9D%9F%E7%AF%87.html</url>
    <content type="text"><![CDATA[&emsp;&emsp;作为本教程的结束篇，我也废话不多说，直接上折腾过程。 为站点添加腾讯公益404页面&emsp;&emsp;我们知道当访问网站中不存在的内容都会跳转到404页面，Hexo也提供了该功能。&emsp;&emsp;方法：在主题文件下的source文件夹创建404.html页面，html代码： 123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot; charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot; homePageName=&quot;回到我的主页&quot;&gt; &lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 注意：在本地模式下调试不了该页面，要推送上GitHub才能看到该页面。如果说你推送上GitHub后还是调试不到该页面，其中一个原因可能是：没有绑定域名。没有绑定域名的话是无法创建404 页面，只会跳转到github默认404 page，绑定域名的话可使用腾讯公益404页面。还有一个注意的点是：http://github.io全部都是https，而js里面的链接有的是http，谷歌浏览器可能会拦截这个跳转，这个大家也要注意一下 绑定域名&emsp;&emsp;博客已经搭建好，能通过github的域名访问，但总归还是用自己的域名比较舒服。因此我们需要设置将自己的域名绑定到github这个博客项目上。&emsp;&emsp;去域名提供商那里注册个域名。至于去那个域名提供商博主就不推荐了，大家自个网上看。 在域名提供商那设置： 添加2条A记录：@—&gt;192.30.252.154@—&gt;192.30.252.153 添加一条CNAME记录：CNAME—&gt;XXXX.github.io 博客添加CNAME文件配置完域名解析后，进入博客目录，在source目录下新建CNAME文件（没有后缀名），写入域名，如：lyhub.xyz 运行：hexo g 运行：hexo d &emsp;&emsp;这个有些情况下需要等待时间才会生效，所以如果访问自个域名不成功的话不用急，多等一下也许就能上了。 SEO优化&emsp;&emsp;seo优化对于网站是否能被搜索引擎快速收录有很大帮助，因此适当做一些seo还是有必要的，可参考：http://www.arao.me/2015/hexo-next-theme-optimize-seo/ &emsp;&emsp;到这我们的 Hexo搭建博客 教程就告一段落了，以上也是博主搭建本博客的记录，在此分享给大家，希望能够帮助到各位看官。 参考https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/http://www.arao.me/2015/hexo-next-theme-optimize-seo/]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建博客——完善与美化]]></title>
    <url>%2FHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E2%80%94%E2%80%94%E5%AE%8C%E5%96%84%E4%B8%8E%E7%BE%8E%E5%8C%96.html</url>
    <content type="text"><![CDATA[&emsp;&emsp;完成上一篇文章的各个步骤操作之后我们已经有了一个基本的博客雏形，那么接下让我们一起来看看如何完善及美化这个雏形，从而得到一个成型的博客。 站点完善&emsp;&emsp;一般博客都会有 归档、分类、标签、搜索 这几个标配的功能，而且主题配置文件一般都有预设且默认开启这几个菜单项（看一下你现在的博客是不是有这几个菜单项，若没有则打开主题配置文件将对应菜单项前面的#号去掉，搜索这个菜单项先不用管它）。不过看一下你的博客的这几个选项，都没有正确的跳转。所以接下来我们来完善这一部分的内容。 添加「归档」页面归档页面已经默认为我们设置好了，所以这个不用管它。 添加「标签」页面&emsp;&emsp;新建「标签」页面，并在菜单中显示「标签」链接。「标签」页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。 底下代码是一篇包含标签的文章的例子： 123456---title: 标签测试文章tags: - Testing - Another Tag--- 请参阅 Hexo 的分类与标签文档，了解如何为文章添加标签或者分类。 新建页面在终端窗口下，定位到 blog 站点目录下。使用 hexo new page 新建一个页面，命名为 tags：hexo new page tags 设置页面类型打开source文件夹下的tags文件夹，编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下： 12345---title: 标签date: 2014-12-22 12:39:04type: &quot;tags&quot;--- 修改菜单（这一步如果在文章开头那已经操作了就不用）在菜单中添加链接。编辑 主题配置文件 ， 添加 tags 到 menu 中，如下: 1234menu: home: / archives: /archives tags: /tags 注意：如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如： 1234567禁用评论示例---title: 标签date: 2014-12-22 12:39:04type: &quot;tags&quot;comments: false--- 添加「分类」页面&emsp;&emsp;新建「分类」页面，并在菜单中显示「分类」链接。「分类」页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。 底下代码是一篇包含分类的文章的例子： 1234---title: 分类测试文章categories: Testing--- 请参阅 Hexo 的分类与标签文档，了解如何为文章添加标签或者分类。 新建页面在终端窗口下，定位到 blog 站点目录下。使用 hexo new page 新建一个页面，命名为 categories：hexo new page categories 设置页面类型打开source文件夹下的categories文件夹，编辑刚新建的页面，将页面的类型设置为 categories，主题将自动为这个页面显示分类。页面内容如下： 12345---title: 分类date: 2014-12-22 12:39:04type: &quot;categories&quot;--- 修改菜单（这一步如果在文章开头那已经操作了就不用）在菜单中添加链接。编辑 主题配置文件 ， 添加 tags 到 menu 中，如下: 1234menu: home: / archives: /archives tags: /categories 注意：如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如： 1234567禁用评论示例---title: 分类date: 2014-12-22 12:39:04type: &quot;categories&quot;comments: false--- &emsp;&emsp;现在已经完成了标签跟分类的设置，只要我们在写文章的时候按照Hexo 的分类与标签文档的规则为文章添加分类和标签，Hexo框架会自动帮我们处理。现在你可以多复制几篇文章，给它们打上不一样的分类和标签，然后重启服务，看看这两个菜单项的跳转是否正确。 配置「搜索」项&emsp;&emsp;Hexo下有几种搜索方式，本博客用的是Hexo的Local Search。&emsp;&emsp;Hexo提供的Local Search,原理是通过hexo-generator-search插件在本地生成一个search.xml文件，搜索的时候从这个文件中根据关键字检索出相应的链接。安装步骤 安装 hexo-generator-search在站点的根目录下执行以下命令：npm install hexo-generator-search --save 安装 hexo-generator-searchdb在站点的根目录下执行以下命令：npm install hexo-generator-searchdb --save 启用搜索编辑站点配置文件，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 编辑 主题配置文件，找到Local search条目：将Local search条目下的enable对应的值设置为true &emsp;&emsp;保存并重启服务你会发现菜单栏多了一个搜索项，点击它就可以进行站内搜索。&emsp;&emsp;至于其它的搜索方式，大家可以上网搜教程，这里就不再赘述。然后，看到这相信小伙伴也知道了对于菜单栏，我们还可以自定义一些自己想要的项，这个我在这也不赘述ಠᴗಠ，大家自个找找教程琢磨琢磨。 评论和分享评论&emsp;&emsp;next已经预设好了很多第三方评论，在主题配置文件了搜索Third Party Services Settings，下面有很多第三方评论。&emsp;&emsp;就本站而言，用的是友言。 首先去友言官网注册个账号，在获取代码那里找到你的uid。 在主题配置文件中找到youyan条目，删除youyan_uid前面的注释，将其值改成你的uid 分享&emsp;&emsp;友言评论也配套了jiathis分享在主题配置文件中搜索并将jiathis条目修改成如下 123jiathis: uid: 你的uidadd_this_id: 你的uid OK，保存，重启服务，打开一篇文章，在文章的底部可以看到分享按钮和评论框了。 主题美化文章内插入图片在文章中写入: 1![](/upload_image/1.jpg) 然后进入themes-主题名-source-upload_image目录下(自己创建)，将图片放到这个目录下，就可以了。 说明：当执行hexo g命令时，会自动把图片复制到 public文件的upload_image目录下。 文章中添加居中引用模块文章Markdown中填写如下：&lt;blockquote class=&quot;blockquote-center&quot;&gt;XXXXXXXXXXXXXXXXXX&lt;/blockquote&gt; 在文章底部增加版权信息在目录 hexo-theme-next/layout/_macro/下添加 my-copyright.swig： 12345678910111213141516171819202122232425262728293031&#123;% if page.copyright %&#125;&lt;div class=&quot;my_post_copyright&quot;&gt; &lt;script src=&quot;//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js&quot;&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js&quot;&gt;&lt;/script&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css&quot;&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年MM月DD日 - HH:MM&quot;) &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class=&quot;copy-path&quot; title=&quot;点击复制文章链接&quot;&gt;&lt;i class=&quot;fa fa-clipboard&quot; data-clipboard-text=&quot;&#123;&#123; page.permalink &#125;&#125;&quot; aria-label=&quot;复制成功！&quot;&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;https://creativecommons.org/licenses/by-nc-nd/4.0/&quot; target=&quot;_blank&quot; title=&quot;Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)&quot;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt; &lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard(&apos;.fa-clipboard&apos;); clipboard.on(&apos;success&apos;, $(function()&#123; $(&quot;.fa-clipboard&quot;).click(function()&#123; swal(&#123; title: &quot;&quot;, text: &apos;复制成功&apos;, html: false, timer: 500, showConfirmButton: false &#125;); &#125;); &#125;)); &lt;/script&gt;&#123;% endif %&#125; 在目录hexo-theme-next/source/css/_common/components/post/下添加my-post-copyright.styl： 123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #b5b5b5; font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #a3d2a3; text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 修改hexo-theme-next/layout/_macro/post.swig，在代码 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;wechat-subscriber.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 之前添加增加如下代码： 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;my-copyright.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 修改hexo-theme-next/source/css/_common/components/post/post.styl文件，在最后一行增加代码： 1@import &quot;my-post-copyright&quot; 如果要在该博文下面增加版权信息的显示，需要在 Markdown 中增加copyright: true的设置，类似： 1234567---title: date: tags: categories: copyright: true--- 自定义hexo new生成md文件的选项在/scaffolds/post.md文件中添加： 12345678910---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:categories: copyright: truepermalink: 01top: 0password:--- 添加顶部加载条打开/themes/hexo-theme-next/layout/_partials/head.swig文件，在maximum-scale=1”/&gt;后添加如下代码: 12&lt;script src=&quot;//cdn.bootcss.com/pace/1.0.2/pace.min.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css&quot; rel=&quot;stylesheet&quot;&gt; 但是，默认的是粉色的，要改变颜色可以在/themes/next/layout/_partials/head.swig文件中添加如下代码（接在刚才link的后面） 12345678910111213&lt;style&gt; .pace .pace-progress &#123; background: #1E92FB; /*进度条颜色*/ height: 3px; &#125; .pace .pace-progress-inner &#123; box-shadow: 0 0 10px #1E92FB, 0 0 5px #1E92FB; /*阴影颜色*/ &#125; .pace .pace-activity &#123; border-top-color: #1E92FB; /*上边框颜色*/ border-left-color: #1E92FB; /*左边框颜色*/ &#125;&lt;/style&gt; 主页文章添加阴影效果打开\themes\hexo-theme-next\source\css_custom\custom.styl,向里面加入： 12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 修改文章底部的那个带#号的标签&emsp;&emsp;修改模板/themes/hexo-theme-next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 修改文章内链接文本样式&emsp;&emsp;将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。&emsp;&emsp;找到文件 themes\hexo-theme-next\source\css_custom\custom.styl ，添加如下 css 样式： 12345678.post-body p a &#123; color: #0593d3; border-bottom: none; &amp;:hover &#123; color: #0477ab; text-decoration: underline; &#125;&#125; 设置侧边栏头像&emsp;&emsp;首先将你的头像图片放到主题文件夹下的source的images文件夹下&emsp;&emsp;在主题配置文件中找到Sidebar Avatar条目，将该条目下的avatar值修改成/images/xxxx.jpg 侧边栏RSS订阅设置在站点根目录下运行：npm install --save hexo-generator-feed在站点配置文件里添加 123# Extensions## Plugins: http://hexo.io/plugins/plugins: hexo-generate-feed 在主题配置文件里找到rss条目，修改成 1234# Set rss to false to disable feed link.# Leave rss as empty to use site&apos;s feed link.# Set rss to specific value if you have burned your feed already.rss: /atom. 配置完之后运行：hexo g 在每篇文章末尾统一添加“本文结束”标记具体实现方法：在路径 \themes\hexo-theme-next\layout_macro 中新建 passage-end-tag.swig 文件,并添加以下内容： 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束，感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 接着打开\themes\next\layout_macro\post.swig文件，在post-body 之后， post-footer 之前添加如下代码（post-footer之前两个DIV）： 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;passage-end-tag.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 然后打开主题配置文件（_config.yml),在末尾添加： 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 定制Hexo-Next底部logo栏http://www.jianshu.com/p/4fbc57269f1b 设置「阅读全文」&amp; 设置页面文章的篇数 Next常见问题：http://theme-next.iissnan.com/faqs.html 提醒：在更新博客内容时，最好先在本地调试完毕后（hexo server），再推送到github上。 &emsp;&emsp;至此，我们的博客算是真正意义上的成型了。如果说你比较熟悉前端的知识，那你可以进一步折腾博客的布局、配色、UI图标等等，深度定制个人专属博客。或者你想为博客新添加页面，菜单项的，网上也有很多教程可以看。在下面的参考链接中有很多有趣的东西给我们的博客增色，大家可以去瞧瞧。&emsp;&emsp;我们的教程也参不多可以结束了，不过由于篇幅的原因，另外几个关于站点的完善我放在另一篇文章里，Hexo搭建博客——结束篇，有兴趣的同学可以继续折腾折腾。 参考https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/http://www.jianshu.com/p/4fbc57269f1bhttp://www.jianshu.com/p/f054333ac9e6]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建博客]]></title>
    <url>%2FHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2.html</url>
    <content type="text"><![CDATA[&emsp;&emsp;Hexo，就同官网上的标题写着：A fast, simple &amp; powerful blog framework 。的确，在博主开始搭建本博客到配置细节到博客上线，确实是体验到fast、simple、powerful，简简单单几个语句就搭好了整个博客的基本框架。网上有关于Hexo的教程也很多，遇到什么问题一搜就能解决。官方给出的文档也很容易看，配合各种主题，插件等搭建一个炫酷的、高定制的个人博客完全不在话下。 必要软件的安装 下载安装git 下载node.js并安装（默认会安装npm） 下载安装hexo。方法：打开cmd 运行 npm install hexo-cli -g 搭建本地博客&emsp;&emsp;按照Hexo官网的方法，cmd下切换到你想要放置博客的目录下，运行以下命令： 1234hexo init blog # 生成blog文件夹，博客所有的东西都放在该目录下cd blognpm installhexo server # 运行程序，访问本地localhost:4000可以看到博客已经搭建成功 注意：在运行hexo server之前最好先运行netstat -ano查看 4000 端口是否被占用。若被占用了改用hexo s -p xxxx，xxxx是端口号，比如可以用hexo s -p 8000，之后 访问本地 localhost:8000 可以看到博客已经搭建成功。 将本地博客和GitHub关联&emsp;&emsp;在Github上创建名字为XXXX.github.io的项目，XXXX为自己的github用户名。打开本地的blog文件夹项目内的_config.yml配置文件，将其中的type设置为git 。 deploy: type: git repository: https://github.com/XXX/XXX.github.io.git branch: master 运行：npm install hexo-deployer-git –save运行：hexo g（本地生成静态文件）运行：hexo d（将本地静态文件推送至Github）之后，打开浏览器，访问http://XXXX.github.io 更新博客文章&emsp;&emsp;在blog目录下执行：hexo new &quot;第一篇文章&quot;，会在source-&gt;_posts文件夹内生成一个.md文件。 编辑该文件（遵循Markdown规则） 修改起始字段（基本不用修改，后续会讲到这些条目） title 文章的标题 date 创建日期 （文件的创建日期 ） updated 修改日期 （ 文件的修改日期） comments 是否开启评论 true tags 标签 categories 分类 permalink url中的名字（文件名） 编写正文内容（遵循Markdown规则） 运行hexo g 生成本地静态文件（Public目录） 运行hexo deploy 将本地静态文件推送至github（hexo d） 访问http://XXXX.github.io，看看成果 &emsp;&emsp;至此，我相信你已经大概清楚了Hexo框架如何写文章以及更新GitHub仓库的博客文章。&emsp;&emsp;接下来是一小部分关于Hexo一些完善操作和个性化定制内容。 个性化定制定制基本信息&emsp;&emsp;在根目录下的_config.yml（站点配置文件）文件中，可以修改标题，作者等信息。打开编辑该文件，注意：每一个值的冒号后面都有一个半角空格！ 未生效的写法：title:nMask的博客能生效的写法：title:[空格]nMask的博客 里面还有其他的条目等你熟悉这个框架后再慢慢去琢磨。 主题&emsp;&emsp;Hexo下的主题有很多，网上搜一下一大把。&emsp;&emsp;cmd进入blog下的themes目录，下载主题 (以next主题为例)： git clone https://github.com/iissnan/hexo-theme-next.git &emsp;&emsp;打开blog的__config.yml（站点配置文件）文件，将themes修改为hexo-theme-next（下载到的主题文件夹的名字）运行：hexo g 和hexo d访问http://XXXX.github.io，可以看到网页主题已经发生了改变。 关于hexo-theme-next主题下的一些个性化配置，参考：Next主题配置 设置主题语言&emsp;&emsp;大部分主题默认是使用英语的，如何修改成自己需要的语言。&emsp;&emsp;每一个主题文件夹下都有一个langues文件夹，里面存放着该主题支持的语言。打开这些文件你可以发现其实这里面都是对主题配置文件里的条目的对应翻译（因此如果对某个翻译不满意，你自己可以进行修改）。复制一个你需要的语言的文件名（不包括后缀名），比如zh-Hans，然后打开blog下的_config_yml（站点配置文件）文件，找到language条目，将其对应的值修改成zh-Hans。保存，重启服务就可以在本地看到效果，之后再推送到GitHub上（hexo g ， hexo d） 添加或删除菜单项&emsp;&emsp;打开blog的theme目录，进入hexo-theme-next目录，编辑_config_yml（主题配置文件）文件，找到menu:字段，在该字段下有几个预设菜单项，有的用#注释掉。你可以根据自己的需求进行调整。 &emsp;&emsp;经过这一小部分的调整，一个真正属于你的博客的雏形算是基本形成了。 &emsp;&emsp;至此，我想你多多少少还是有点成就感吧。不错，稍微享受一下之后，接下来还要继续完善这个博客，包括菜单选项的跳转以及主题的美化。 请看Hexo搭建博客——完善与美化 参考https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开启Hexo博客之旅]]></title>
    <url>%2F%E5%BC%80%E5%90%AFHexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E6%97%85.html</url>
    <content type="text"><![CDATA[&emsp;&emsp;本博客用的是Hexo+Next主题+Github部署，具体可参考: Hexo搭建博客 &emsp;&emsp;本博客主要用于记录及分享个人技术总结以及心得，后续或许有其他非技术方面的内容分享，若有合作或者疑问可发送邮件到：liyonggdut@163.com&emsp;&emsp;关于友情链接，可在下方留言，欢迎互相添加友情链接。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>原创</tag>
      </tags>
  </entry>
</search>
